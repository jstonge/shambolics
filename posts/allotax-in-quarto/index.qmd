---
title: "ALLotaxonometer"
description: |
  Allotaxonometer was exclusive to matlab. Not anymore.
categories:
  - Allotaxonometer
  - Interactive
date: today
author: Jonathan St-Onge
editor: visual
format: 
    html:
        echo: false
image: allo.png
---


```{ojs}
viewof form = Inputs.form(
  [
    Inputs.select(d3.range(elem_names.length), {label: "System 1", multiple: true, multiple: 3, value: [0], format: x => elem_names[x]}),
    Inputs.select(d3.range(elem_names.length), {label: "System 2", multiple: true, multiple: 3, value: [1], format: x => elem_names[x]}),
  ],
  {
    template: (inputs) => htl.html`<div style="display: flex; gap: 4em">
  <br>${inputs}
</div>`
  }
)

viewof alpha = Inputs.range([0, alphas.length-1], {step: 1, label: "Î±", format: x => alphas[x]})

next_button()
```

::: {.column-screen-inset}

```{ojs}
html`
<br>
<div style="display:flex; align-items:center; gap: 10em; margin-left: -75px; justify-content: center; width: 100%; text-align: center; font-size: 22px; ">
      <div>${ tex`\Omega_1` }: ${ title(0) }</div> 
      <div>${ tex`\Omega_2` }: ${ title(1) }</div>  
</div>
<div style="display:flex; gap: 28em; margin-top: -100px; justify-content: center;">
    <div id="diamondplot"></div>
    <div style="margin-top: 110px;" id="wordshift"></div>
</div>
<div style="display:flex; align-items:center; gap: 14em;  margin-left:-95px;justify-content: center; margin-top:-300px">
    <div id="legend"></div>
    <div id="balance"></div>
</div>
`
```

:::

```{ojs}
all = import('https://cdn.skypack.dev/allotaxonometer@1.1.9?min')

elem = FileAttachment("data/elem_girls.json").json()
elem_names = Object.keys(elem)
mutable clicks = 0
sel_sys1 = elem_names[(form[0][0]+clicks) % elem_names.length]
sel_sys2 = elem_names[(form[1][0]+clicks) % elem_names.length]
elems1 = elem[sel_sys1]
elems2 = elem[sel_sys2]

me_class = new all.mixedElems(elems1, elems2)

rtd = me_class.RTD(alphas[alpha])
dat = me_class.Diamond(rtd)

diamond_dat = dat.counts
wordshift = me_class.wordShift(dat)
balance_dat = me_class.balanceDat() 

p1=all.DiamondChart(diamond_dat);
p2=all.WordShiftChart(wordshift, { height: 670 });
p3=all.BalanceChart(balance_dat);
p4=all.LegendChart(diamond_dat);

title = (sys) => {
  const out = sys == 0 ? sel_sys1 : sel_sys2
  return out.replace(/.((c|t)sv|json)/i, "")
}

alphas = d3.range(0,18).map(v => +(v/12).toFixed(2)).concat([1, 2, 5, Infinity])

not_zero = tex`\propto \sum_\tau \Big| \frac{1}{r_{\tau,1}^{ ${ alphas[alpha] }} } - \frac{1}{r_{\tau,2}^{ ${ alphas[alpha] }}} \Big| `

zero = tex`\propto \sum_\tau \Big|\ln \frac{r_{\tau,1}}{r_{\tau,2}}\Big| `

infinity = tex`\propto \sum_\tau (1 - \delta_{r_{\tau,1}, r_{\tau,2}}) \times\max\Big\{\frac{1}{r_{\tau,1}},\frac{1}{r_{\tau,2}} \Big\} `
```


```{ojs}
import { button } from "@bartok32/diy-inputs"

next_button = () => button({
  title: "",
  value: "Next",
  desc: "",
  buttonStyle: {
    background: "#7295FF",
    color: "white"
  },
  onclick: (objs) => {
    mutable clicks += 1;

    d3.select(objs.button)
      .style("background", "#6786E5")
      .interrupt()
      .transition()
      .duration(300)
      .style("background", "#7295FF");

    if (mutable clicks > 0 && objs.output === "") {
      objs.output = d3
        .select(objs.div)
        .insert("a", "div.desc")
        .attr("class", "output")
        .style("margin-left", "5px")
        .style("font-size", "11px")
        .style("cursor", "pointer")
        .style("border", "0.5px solid black")
        .style("border-radius", "5px")
        .style("padding", "5px")
        .on("click", function () {
          this.remove();
          objs.output = "";
          mutable clicks = 0;
        })
        .html("RESET");
    }
  }
})
```
